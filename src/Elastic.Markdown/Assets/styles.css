@import "tailwindcss";
@import "./fonts.css";
@import "./theme.css";
@import "./markdown/typography.css";
@import "./markdown/list.css";
@import "./markdown/tabs.css";
@import "./markdown/code.css";
@import "./copybutton.css";
@import "./markdown/admonition.css";

#default-search::-webkit-search-cancel-button {
	padding-right: calc(var(--spacing) * 2);
	-webkit-appearance: none;
	height: 16px;
	width: 16px;
	margin-left: .4em;
	background-image: url("data:image/svg+xml;utf8,<svg aria-hidden='true' xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 24 24'><path stroke='%23ffffff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 18 17.94 6M18 18 6.06 6'/></svg>");
	cursor: pointer;
	background-repeat: no-repeat;
}

#pages-nav li.current {
	position: relative;
	&::before {
		content: "";
		position: absolute;
		top: 50%;
		left: -1px;
		width: calc(var(--spacing) * 6);
		height: 1px;
		background-color: var(--color-gray-200);
	}
}

#toc-nav a.current {
	color: var(--color-blue-elastic);
	&:hover {
		color: var(--color-blue-elastic);
	}
}

@layer components {
	.link {
		font-family: "Mier B", "Inter", sans-serif;
		@apply 
			text-blue-elastic 
			text-nowrap
			font-semibold
			hover:text-blue-800
			inline-flex
			justify-center
			items-center;
		
		.link-arrow {
			@apply 
				shrink-0 
				size-7
				ml-2
				transition-transform
				ease-out;
		}

		&:hover{
			svg {
				@apply translate-x-2;
			}
		}
	}
	
	.sidebar {
		.sidebar-nav {
			@apply sticky top-22 z-30 overflow-y-auto;
			max-height: calc(100vh - var(--spacing) * 22);
		}
		
		.sidebar-link {
			@apply
				text-ink-light
				hover:text-black
				text-sm
			    leading-[1.2em]
			    tracking-[-0.02em];
		}
	}
	
	.content-container {
		@apply w-full max-w-[80ch];
	}
}

* {
	scroll-margin-top: calc(var(--spacing) * 26);
}

:root {
	--outline-size: max(2px, 0.08em);
	--outline-style: auto;
	--outline-color: var(--color-blue-elastic);
	--outline-offset: 5;
}

:is(a, button, input, textarea, summary):focus {
	outline: var(--outline-size) var(--outline-style) var(--outline-color);
	outline-offset: var(--outline-offset, var(--outline-size));
}

:is(a, button, input, textarea, summary):focus-visible {
	outline: var(--outline-size) var(--outline-style) var(--outline-color);
	outline-offset: var(--outline-offset, var(--outline-size));
}

:is(a, button, input, textarea, summary):focus:not(:focus-visible) {
	outline: none;
}
