!function(){function e(e,t,n,i){Object.defineProperty(e,t,{get:n,set:i,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire6955,n=t.register;n("7JmiP",function(n,i){e(n.exports,"render",function(){return x});var r=t("6pXGo"),s=t("45iQj"),a=t("46nww");t("kI7jx");var d=t("aWVZR"),o=t("hFIWW");t("fxedn"),t("3tpah");var h=t("kNZMB");t("aWvOd"),t("2OCaF"),t("2Bif5");var l=t("6t5tb"),g=new Map,u=new Map,c=new Map,f=(0,l.a)(()=>{u.clear(),c.clear(),g.clear()},"clear"),p=(0,l.a)((e,t)=>{let n=u.get(t)||[];return h.b.trace("In isDescendant",t," ",e," = ",n.includes(e)),n.includes(e)},"isDescendant"),b=(0,l.a)((e,t)=>{let n=u.get(t)||[];return h.b.info("Descendants of ",t," is ",n),h.b.info("Edge is ",e),e.v!==t&&e.w!==t&&(n?n.includes(e.v)||p(e.v,t)||p(e.w,t)||n.includes(e.w):(h.b.debug("Tilt, ",t,",not in descendants"),!1))},"edgeInCluster"),v=(0,l.a)((e,t,n,i)=>{h.b.warn("Copying children of ",e,"root",i,"data",t.node(e),i);let r=t.children(e)||[];e!==i&&r.push(e),h.b.warn("Copying (nodes) clusterId",e,"nodes",r),r.forEach(r=>{if(t.children(r).length>0)v(r,t,n,i);else{let s=t.node(r);h.b.info("cp ",r," to ",i," with parent ",e),n.setNode(r,s),i!==t.parent(r)&&(h.b.warn("Setting parent",r,t.parent(r)),n.setParent(r,t.parent(r))),e!==i&&r!==e?(h.b.debug("Setting parent",r,e),n.setParent(r,e)):(h.b.info("In copy ",e,"root",i,"data",t.node(e),i),h.b.debug("Not Setting parent for node=",r,"cluster!==rootId",e!==i,"node!==clusterId",r!==e));let a=t.edges(r);h.b.debug("Copying Edges",a),a.forEach(r=>{h.b.info("Edge",r);let s=t.edge(r.v,r.w,r.name);h.b.info("Edge data",s,i);try{b(r,i)?(h.b.info("Copying as ",r.v,r.w,s,r.name),n.setEdge(r.v,r.w,s,r.name),h.b.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):h.b.info("Skipping copy of edge ",r.v,"--\x3e",r.w," rootId: ",i," clusterId:",e)}catch(e){h.b.error(e)}})}h.b.debug("Removing node",r),t.removeNode(r)})},"copy"),w=(0,l.a)((e,t)=>{let n=t.children(e),i=[...n];for(let r of n)c.set(r,e),i=[...i,...w(r,t)];return i},"extractDescendants"),_=(0,l.a)((e,t,n)=>{let i=e.edges().filter(e=>e.v===t||e.w===t),r=e.edges().filter(e=>e.v===n||e.w===n),s=i.map(e=>({v:e.v===t?n:e.v,w:e.w===t?t:e.w})),a=r.map(e=>({v:e.v,w:e.w}));return s.filter(e=>a.some(t=>e.v===t.v&&e.w===t.w))},"findCommonEdges"),m=(0,l.a)((e,t,n)=>{let i,r=t.children(e);if(h.b.trace("Searching children of id ",e,r),r.length<1)return e;for(let e of r){let r=m(e,t,n),s=_(t,n,r);if(r)if(!(s.length>0))return r;else i=r}return i},"findNonClusterChild"),y=(0,l.a)(e=>g.has(e)&&g.get(e).externalConnections&&g.has(e)?g.get(e).id:e,"getAnchorId"),E=(0,l.a)((e,t)=>{if(!e||t>10)return void h.b.debug("Opting out, no graph ");for(let t of(h.b.debug("Opting in, graph "),e.nodes().forEach(function(t){e.children(t).length>0&&(h.b.warn("Cluster identified",t," Replacement id in edges: ",m(t,e,t)),u.set(t,w(t,e)),g.set(t,{id:m(t,e,t),clusterData:e.node(t)}))}),e.nodes().forEach(function(t){let n=e.children(t),i=e.edges();n.length>0?(h.b.debug("Cluster identified",t,u),i.forEach(e=>{p(e.v,t)^p(e.w,t)&&(h.b.warn("Edge: ",e," leaves cluster ",t),h.b.warn("Descendants of XXX ",t,": ",u.get(t)),g.get(t).externalConnections=!0)})):h.b.debug("Not a cluster ",t,u)}),g.keys())){let n=g.get(t).id,i=e.parent(n);i!==t&&g.has(i)&&!g.get(i).externalConnections&&(g.get(t).id=i)}e.edges().forEach(function(t){let n=e.edge(t);h.b.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),h.b.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let i=t.v,r=t.w;if(h.b.warn("Fix XXX",g,"ids:",t.v,t.w,"Translating: ",g.get(t.v)," --- ",g.get(t.w)),g.get(t.v)&&g.get(t.w)&&g.get(t.v)===g.get(t.w)){h.b.warn("Fixing and trying link to self - removing XXX",t.v,t.w,t.name),h.b.warn("Fixing and trying - removing XXX",t.v,t.w,t.name),i=y(t.v),r=y(t.w),e.removeEdge(t.v,t.w,t.name);let s=t.w+"---"+t.v+"---1",a=t.w+"---"+t.v+"---2";e.setNode(s,{domId:s,id:s,labelStyle:"",label:"",padding:0,shape:"labelRect",style:"",width:10,height:10}),e.setNode(a,{domId:a,id:a,labelStyle:"",padding:0,shape:"labelRect",style:"",width:10,height:10});let d=structuredClone(n),o=structuredClone(n),l=structuredClone(n);d.label="",d.arrowTypeEnd="none",d.id=t.name+"-cyclic-special-1",o.arrowTypeEnd="none",o.id=t.name+"-cyclic-special-mid",l.label="",d.fromCluster=t.v,l.toCluster=t.v,l.id=t.name+"-cyclic-special-2",e.setEdge(i,s,d,t.name+"-cyclic-special-0"),e.setEdge(s,a,o,t.name+"-cyclic-special-1"),e.setEdge(a,r,l,t.name+"-cyclic-special-2")}else if(g.get(t.v)||g.get(t.w)){if(h.b.warn("Fixing and trying - removing XXX",t.v,t.w,t.name),i=y(t.v),r=y(t.w),e.removeEdge(t.v,t.w,t.name),i!==t.v){let r=e.parent(i);g.get(r).externalConnections=!0,n.fromCluster=t.v}if(r!==t.w){let i=e.parent(r);g.get(i).externalConnections=!0,n.toCluster=t.w}h.b.warn("Fix Replacing with XXX",i,r,t.name),e.setEdge(i,r,n,t.name)}}),h.b.warn("Adjusted Graph",(0,r.a)(e)),C(e,0),h.b.trace(g)},"adjustClustersAndEdges"),C=(0,l.a)((e,t)=>{if(h.b.warn("extractor - ",t,(0,r.a)(e),e.children("D")),t>10)return void h.b.error("Bailing out");let n=e.nodes(),i=!1;for(let t of n){let n=e.children(t);i=i||n.length>0}if(!i)return void h.b.debug("Done, no node has children",e.nodes());for(let i of(h.b.debug("Nodes = ",n,t),n))if(h.b.debug("Extracting node",i,g,g.has(i)&&!g.get(i).externalConnections,!e.parent(i),e.node(i),e.children("D")," Depth ",t),g.has(i))if(!g.get(i).externalConnections&&e.children(i)&&e.children(i).length>0){h.b.warn("Cluster without external connections, without a parent and with children",i,t);let n="TB"===e.graph().rankdir?"LR":"TB";g.get(i)?.clusterData?.dir&&(n=g.get(i).clusterData.dir,h.b.warn("Fixing dir",g.get(i).clusterData.dir,n));let s=new(0,o.a)({multigraph:!0,compound:!0}).setGraph({rankdir:n,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});h.b.warn("Old graph before copy",(0,r.a)(e)),v(i,e,s,i),e.setNode(i,{clusterNode:!0,id:i,clusterData:g.get(i).clusterData,label:g.get(i).label,graph:s}),h.b.warn("New graph after copy node: (",i,")",(0,r.a)(s)),h.b.debug("Old graph after copy",(0,r.a)(e))}else h.b.warn("Cluster ** ",i," **not meeting the criteria !externalConnections:",!g.get(i).externalConnections," no parent: ",!e.parent(i)," children ",e.children(i)&&e.children(i).length>0,e.children("D"),t),h.b.debug(g);else h.b.debug("Not a cluster",i,t);for(let i of(n=e.nodes(),h.b.warn("New list of nodes",n),n)){let n=e.node(i);h.b.warn(" Now next level",i,n),n.clusterNode&&C(n.graph,t+1)}},"extractor"),X=(0,l.a)((e,t)=>{if(0===t.length)return[];let n=Object.assign([],t);return t.forEach(t=>{let i=e.children(t),r=X(e,i);n=[...n,...r]}),n},"sorter"),N=(0,l.a)(e=>X(e,e.children()),"sortNodesByHierarchy"),D=(0,l.a)(async(e,t,n,i,o,u)=>{h.b.info("Graph in recursive render: XXX",(0,r.a)(t),o);let c=t.graph().rankdir;h.b.trace("Dir in recursive render - dir:",c);let f=e.insert("g").attr("class","root");t.nodes()?h.b.info("Recursive render XXX",t.nodes()):h.b.info("No nodes found for",t),t.edges().length>0&&h.b.info("Recursive edges",t.edge(t.edges()[0]));let p=f.insert("g").attr("class","clusters"),b=f.insert("g").attr("class","edgePaths"),v=f.insert("g").attr("class","edgeLabels"),w=f.insert("g").attr("class","nodes");await Promise.all(t.nodes().map(async function(e){let r=t.node(e);if(void 0!==o){let n=JSON.parse(JSON.stringify(o.clusterData));h.b.trace(`Setting data for parent cluster XXX
 Node.id = `,e,`
 data=`,n.height,`
Parent cluster`,o.height),t.setNode(o.id,n),t.parent(e)||(h.b.trace("Setting parent",e,o.id),t.setParent(e,o.id,n))}if(h.b.info("(Insert) Node XXX"+e+": "+JSON.stringify(t.node(e))),r?.clusterNode){h.b.info("Cluster identified XBX",e,r.width,t.node(e));let{ranksep:a,nodesep:d}=t.graph();r.graph.setGraph({...r.graph.graph(),ranksep:a+25,nodesep:d});let o=await D(w,r.graph,n,i,t.node(e),u),l=o.elem;(0,s.i)(r,l),r.diff=o.diff||0,h.b.info("New compound node after recursive render XAX",e,"width",r.width,"height",r.height),(0,s.k)(l,r)}else t.children(e).length>0?(h.b.info("Cluster - the non recursive path XBX",e,r.id,r,r.width,"Graph:",t),h.b.info(m(r.id,t)),g.set(r.id,{id:m(r.id,t),node:r})):(h.b.trace("Node - the non recursive path XAX",e,r.id,r),await (0,s.j)(w,t.node(e),c))})),await (0,l.a)(async()=>{let e=t.edges().map(async function(e){let n=t.edge(e.v,e.w,e.name);h.b.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),h.b.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(t.edge(e))),h.b.info("Fix",g,"ids:",e.v,e.w,"Translating: ",g.get(e.v),g.get(e.w)),await (0,s.d)(v,n)});await Promise.all(e)},"processEdges")(),h.b.info("Graph before layout:",JSON.stringify((0,r.a)(t))),h.b.info("############################################# XXX"),h.b.info("###                Layout                 ### XXX"),h.b.info("############################################# XXX"),(0,d.a)(t),h.b.info("Graph after layout:",JSON.stringify((0,r.a)(t)));let _=0,{subGraphTitleTotalMargin:y}=(0,a.a)(u);return await Promise.all(N(t).map(async function(e){let n=t.node(e);if(h.b.info("Position XBX => "+e+": ("+n.x,","+n.y,") width: ",n.width," height: ",n.height),n?.clusterNode)n.y+=y,h.b.info("A tainted cluster node XBX1",e,n.id,n.width,n.height,n.x,n.y,t.parent(e)),g.get(n.id).node=n,(0,s.m)(n);else if(t.children(e).length>0){h.b.info("A pure cluster node XBX1",e,n.id,n.x,n.y,n.width,n.height,t.parent(e)),n.height+=y,t.node(n.parentId);let i=n?.padding/2||0,r=n?.labelBBox?.height||0;h.b.debug("OffsetY",r-i||0,"labelHeight",r,"halfPadding",i),await (0,s.a)(p,n),g.get(n.id).node=n}else{let e=t.node(n.parentId);n.y+=y/2,h.b.info("A regular node XBX1 - using the padding",n.id,"parent",n.parentId,n.width,n.height,n.x,n.y,"offsetY",n.offsetY,"parent",e,e?.offsetY,n),(0,s.m)(n)}})),t.edges().forEach(function(e){let r=t.edge(e);h.b.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(r),r),r.points.forEach(e=>e.y+=y/2);let a=t.node(e.v);var d=t.node(e.w);let o=(0,s.f)(b,r,g,n,a,d,i);(0,s.e)(r,o)}),t.nodes().forEach(function(e){let n=t.node(e);h.b.info(e,n.type,n.diff),n.isGroup&&(_=n.diff)}),h.b.warn("Returning from recursive render XAX",f,_),{elem:f,diff:_}},"recursiveRender"),x=(0,l.a)(async(e,t)=>{let n=new(0,o.a)({multigraph:!0,compound:!0}).setGraph({rankdir:e.direction,nodesep:e.config?.nodeSpacing||e.config?.flowchart?.nodeSpacing||e.nodeSpacing,ranksep:e.config?.rankSpacing||e.config?.flowchart?.rankSpacing||e.rankSpacing,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),i=t.select("g");(0,s.g)(i,e.markers,e.type,e.diagramId),(0,s.l)(),(0,s.c)(),(0,s.b)(),f(),e.nodes.forEach(e=>{n.setNode(e.id,{...e}),e.parentId&&n.setParent(e.id,e.parentId)}),h.b.debug("Edges:",e.edges),e.edges.forEach(e=>{n.setEdge(e.start,e.end,{...e},e.id)}),h.b.warn("Graph at first:",JSON.stringify((0,r.a)(n))),E(n),h.b.warn("Graph after:",JSON.stringify((0,r.a)(n)));let a=(0,h.X)();await D(i,n,e.type,e.diagramId,void 0,a)},"render")}),n("6pXGo",function(n,i){e(n.exports,"a",function(){return a});var r=t("aWvOd"),s=t("6t5tb");function a(e){var t={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:d(e),edges:o(e)};return(0,r.D)(e.graph())||(t.value=(0,r.e)(e.graph())),t}function d(e){return(0,r.s)(e.nodes(),function(t){var n=e.node(t),i=e.parent(t),s={v:t};return(0,r.D)(n)||(s.value=n),(0,r.D)(i)||(s.parent=i),s})}function o(e){return(0,r.s)(e.edges(),function(t){var n=e.edge(t),i={v:t.v,w:t.w};return(0,r.D)(t.name)||(i.name=t.name),(0,r.D)(n)||(i.value=n),i})}(0,s.a)(a,"write"),(0,s.a)(d,"writeNodes"),(0,s.a)(o,"writeEdges")}),n("hFIWW",function(n,i){e(n.exports,"a",function(){return o});var r=t("aWvOd"),s=t("2OCaF"),a=t("2Bif5"),d=t("6t5tb"),o=class{static{(0,d.a)(this,"Graph")}constructor(e={}){this._isDirected=!(0,r.x)(e,"directed")||e.directed,this._isMultigraph=!!(0,r.x)(e,"multigraph")&&e.multigraph,this._isCompound=!!(0,r.x)(e,"compound")&&e.compound,this._label=void 0,this._defaultNodeLabelFn=(0,a.O)(void 0),this._defaultEdgeLabelFn=(0,a.O)(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children["\0"]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}isDirected(){return this._isDirected}isMultigraph(){return this._isMultigraph}isCompound(){return this._isCompound}setGraph(e){return this._label=e,this}graph(){return this._label}setDefaultNodeLabel(e){return(0,a.e)(e)||(e=(0,a.O)(e)),this._defaultNodeLabelFn=e,this}nodeCount(){return this._nodeCount}nodes(){return(0,r.b)(this._nodes)}sources(){var e=this;return(0,r.p)(this.nodes(),function(t){return(0,s.d)(e._in[t])})}sinks(){var e=this;return(0,r.p)(this.nodes(),function(t){return(0,s.d)(e._out[t])})}setNodes(e,t){var n=arguments,i=this;return(0,r.n)(e,function(e){n.length>1?i.setNode(e,t):i.setNode(e)}),this}setNode(e,t){return(0,r.x)(this._nodes,e)?arguments.length>1&&(this._nodes[e]=t):(this._nodes[e]=arguments.length>1?t:this._defaultNodeLabelFn(e),this._isCompound&&(this._parent[e]="\0",this._children[e]={},this._children["\0"][e]=!0),this._in[e]={},this._preds[e]={},this._out[e]={},this._sucs[e]={},++this._nodeCount),this}node(e){return this._nodes[e]}hasNode(e){return(0,r.x)(this._nodes,e)}removeNode(e){var t=this;if((0,r.x)(this._nodes,e)){var n=(0,d.a)(function(e){t.removeEdge(t._edgeObjs[e])},"removeEdge");delete this._nodes[e],this._isCompound&&(this._removeFromParentsChildList(e),delete this._parent[e],(0,r.n)(this.children(e),function(e){t.setParent(e)}),delete this._children[e]),(0,r.n)((0,r.b)(this._in[e]),n),delete this._in[e],delete this._preds[e],(0,r.n)((0,r.b)(this._out[e]),n),delete this._out[e],delete this._sucs[e],--this._nodeCount}return this}setParent(e,t){if(!this._isCompound)throw Error("Cannot set parent in a non-compound graph");if((0,r.D)(t))t="\0";else{t+="";for(var n=t;!(0,r.D)(n);n=this.parent(n))if(n===e)throw Error("Setting "+t+" as parent of "+e+" would create a cycle");this.setNode(t)}return this.setNode(e),this._removeFromParentsChildList(e),this._parent[e]=t,this._children[t][e]=!0,this}_removeFromParentsChildList(e){delete this._children[this._parent[e]][e]}parent(e){if(this._isCompound){var t=this._parent[e];if("\0"!==t)return t}}children(e){if((0,r.D)(e)&&(e="\0"),this._isCompound){var t=this._children[e];if(t)return(0,r.b)(t)}else{if("\0"===e)return this.nodes();if(this.hasNode(e))return[]}}predecessors(e){var t=this._preds[e];if(t)return(0,r.b)(t)}successors(e){var t=this._sucs[e];if(t)return(0,r.b)(t)}neighbors(e){var t=this.predecessors(e);if(t)return(0,r.Q)(t,this.successors(e))}isLeaf(e){var t;return 0===(this.isDirected()?this.successors(e):this.neighbors(e)).length}filterNodes(e){var t=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});t.setGraph(this.graph());var n=this;(0,r.n)(this._nodes,function(n,i){e(i)&&t.setNode(i,n)}),(0,r.n)(this._edgeObjs,function(e){t.hasNode(e.v)&&t.hasNode(e.w)&&t.setEdge(e,n.edge(e))});var i={};function s(e){var r=n.parent(e);return void 0===r||t.hasNode(r)?(i[e]=r,r):r in i?i[r]:s(r)}return(0,d.a)(s,"findParent"),this._isCompound&&(0,r.n)(t.nodes(),function(e){t.setParent(e,s(e))}),t}setDefaultEdgeLabel(e){return(0,a.e)(e)||(e=(0,a.O)(e)),this._defaultEdgeLabelFn=e,this}edgeCount(){return this._edgeCount}edges(){return(0,r.z)(this._edgeObjs)}setPath(e,t){var n=this,i=arguments;return(0,r.L)(e,function(e,r){return i.length>1?n.setEdge(e,r,t):n.setEdge(e,r),r}),this}setEdge(){var e,t,n,i,s=!1,a=arguments[0];"object"==typeof a&&null!==a&&"v"in a?(e=a.v,t=a.w,n=a.name,2==arguments.length&&(i=arguments[1],s=!0)):(e=a,t=arguments[1],n=arguments[3],arguments.length>2&&(i=arguments[2],s=!0)),e=""+e,t=""+t,(0,r.D)(n)||(n=""+n);var d=g(this._isDirected,e,t,n);if((0,r.x)(this._edgeLabels,d))return s&&(this._edgeLabels[d]=i),this;if(!(0,r.D)(n)&&!this._isMultigraph)throw Error("Cannot set a named edge when isMultigraph = false");this.setNode(e),this.setNode(t),this._edgeLabels[d]=s?i:this._defaultEdgeLabelFn(e,t,n);var o=u(this._isDirected,e,t,n);return e=o.v,t=o.w,Object.freeze(o),this._edgeObjs[d]=o,h(this._preds[t],e),h(this._sucs[e],t),this._in[t][d]=o,this._out[e][d]=o,this._edgeCount++,this}edge(e,t,n){var i=1==arguments.length?c(this._isDirected,arguments[0]):g(this._isDirected,e,t,n);return this._edgeLabels[i]}hasEdge(e,t,n){var i=1==arguments.length?c(this._isDirected,arguments[0]):g(this._isDirected,e,t,n);return(0,r.x)(this._edgeLabels,i)}removeEdge(e,t,n){var i=1==arguments.length?c(this._isDirected,arguments[0]):g(this._isDirected,e,t,n),r=this._edgeObjs[i];return r&&(e=r.v,t=r.w,delete this._edgeLabels[i],delete this._edgeObjs[i],l(this._preds[t],e),l(this._sucs[e],t),delete this._in[t][i],delete this._out[e][i],this._edgeCount--),this}inEdges(e,t){var n=this._in[e];if(n){var i=(0,r.z)(n);return t?(0,r.p)(i,function(e){return e.v===t}):i}}outEdges(e,t){var n=this._out[e];if(n){var i=(0,r.z)(n);return t?(0,r.p)(i,function(e){return e.w===t}):i}}nodeEdges(e,t){var n=this.inEdges(e,t);if(n)return n.concat(this.outEdges(e,t))}};function h(e,t){e[t]?e[t]++:e[t]=1}function l(e,t){--e[t]||delete e[t]}function g(e,t,n,i){var s=""+t,a=""+n;if(!e&&s>a){var d=s;s=a,a=d}return s+"\x01"+a+"\x01"+((0,r.D)(i)?"\0":i)}function u(e,t,n,i){var r=""+t,s=""+n;if(!e&&r>s){var a=r;r=s,s=a}var d={v:r,w:s};return i&&(d.name=i),d}function c(e,t){return g(e,t.v,t.w,t.name)}o.prototype._nodeCount=0,o.prototype._edgeCount=0,(0,d.a)(h,"incrementOrInitEntry"),(0,d.a)(l,"decrementOrRemoveEntry"),(0,d.a)(g,"edgeArgsToId"),(0,d.a)(u,"edgeArgsToObj"),(0,d.a)(c,"edgeObjToId")})}();
//# sourceMappingURL=dagre-EVPMPUST.fa25ed5d.js.map
