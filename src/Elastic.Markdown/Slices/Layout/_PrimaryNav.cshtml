@inherits RazorSlice<PrimaryNavViewModel>
<nav class="grow" id="primary-nav">
	<ul class="flex items-center justify-start h-full text-ink font-sans gap-6">
		@foreach (var navItem in Model.Items)
		{
			<li class="relative group h-full flex items-center">
				
				@if (string.IsNullOrEmpty(navItem.Url))
				{
					<button class="text-nowrap font-semibold flex items-center gap-1">
						<span>@navItem.Title</span>
						@if (navItem.DropdownItems.Count > 0)
						{
							<svg
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								width="16">
								<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"/>
							</svg>
						}
					</button>
				}
				else
				{
					<a @navItem.HtmxAttributes class="peer text-nowrap font-semibold flex items-center gap-1 hover:text-blue-elastic" href="@navItem.Url">
						<span>@navItem.Title</span>
						@if (navItem.DropdownItems.Count > 0)
						{
							<svg
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								width="16">
								<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"/>
							</svg>
						}
					</a>
				}
				@if (navItem.DropdownItems.Count > 0)
				{
					<div class="hidden z-60 group-hover:z-70 group-focus-within:block group-hover:block peer-active:hidden absolute top-full -left-4 pt-2">
						<ul class="bg-white text-ink rounded-lg shadow-lg border-1 border-grey-20 font-body w-100">
							@foreach (var item in navItem.DropdownItems)
							{
								@await RenderPartialAsync(_PrimaryNavDropdownItem.Create(item))
							}
						</ul>
					</div>
				}
			</li>
		}
	</ul>
</nav>
