@using Elastic.Markdown.Helpers
@using Markdig
@inherits RazorSliceHttpResult<MainViewModel>
<div class="flex flex-col items-center px-6">
	<div class="container flex">
		@await RenderPartialAsync(_PagesNav.Create(Model))
		@await RenderPartialAsync(_TableOfContents.Create<ITableOfContentsModel>(Model))
		<main class="w-full pt-6 pb-30 px-6 order-2 relative">
			<div class="w-full absolute top-0 left-0 right-0 htmx-indicator" id="htmx-indicator" role="status">
				<div class="h-[2px] w-full overflow-hidden">
					<div class="progress w-full h-full bg-pink-70 left-right"></div>
				</div>
				<div class="sr-only">Loading</div>
			</div>
			<div class="content-container">
				@await RenderPartialAsync(_Breadcrumbs.Create<IBreadCrumbModel>(Model))
			</div>
			<article id="markdown-content" class="content-container markdown-content">
				@* This way it's correctly rendered as <h1>text</h1> instead of <h1><p>text</p></h1> *@
				@(new HtmlString(Markdown.ToHtml("# " + Model.TitleRaw)))
				@if (Model.Applies is not null)
				{
					await RenderPartialAsync(ApplicableTo.Create(Model.Applies));
				}
				@(new HtmlString(Model.MarkdownHtml))
			</article>
			<footer id="prev-next-nav" class="content-container mt-20">
				<div class="flex flex-wrap lg:flex-nowrap gap-2 mt-2">
					<div class="w-full">
						@if (Model.PreviousDocument != null)
						{
							<a
								href="@Model.PreviousDocument.Url"
								hx-get="@Model.PreviousDocument.Url"
								hx-select-oob="@Htmx.GetHxSelectOob()"
								hx-swap="none"
								hx-push-url="true"
								hx-indicator="#htmx-indicator"
								preload="mouseover"
								class="flex h-full items-center text-ink-light hover:black border-1 border-gray-300 hover:border-gray-500 rounded-lg p-6 shadow-md"
							>
								<svg class="size-6 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5"/>
								</svg>
								<div>
									<div class="text-xs lg:text-sm">Previous</div>
									<div class="text-base lg:text-xl text-black">@Model.PreviousDocument.NavigationTitle</div>
								</div>
							</a>
						}
					</div>
					<div class="w-full">
						@if (Model.NextDocument != null)
						{
							<a
								href="@Model.NextDocument.Url"
								hx-get="@Model.NextDocument.Url"
								hx-select-oob="@Htmx.GetHxSelectOob()"
								hx-swap="none"
								hx-push-url="true"
								hx-indicator="#htmx-indicator"
								preload="mouseover"
								class="flex h-full items-center justify-end text-ink-light hover:black border-1 border-gray-300 hover:border-gray-500 rounded-lg p-6 shadow-md text-right"
							>
								<div>
									<div class="text-xs lg:text-sm">Next</div>
									<div class="text-base lg:text-xl text-black">@Model.NextDocument.NavigationTitle</div>
								</div>
								<svg class="size-6 ml-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"/>
								</svg>
							</a>
						}
					</div>
				</div>
			</footer>
		</main>
	</div>
</div>
