@inherits RazorSlice<ImageCarouselViewModel>
<div class="carousel-container" id="@Model.Id">
    <div class="carousel-track">
        @for (int i = 0; i < Model.Images.Count; i++)
        {
            var image = Model.Images[i];
            <div class="carousel-slide" data-index="@i" @(i == 0 ? "data-active=true" : "")>
                <a class="carousel-image-reference" href="@image.ImageUrl" target="_blank">
                    <img loading="lazy" title="@image.Title" alt="@(image.Alt ?? "")" src="@image.ImageUrl" style="@image.Style" />
                </a>
            </div>
        }
    </div>
    
    @if (Model.ShowControls == true && Model.Images.Count > 1)
    {
        <button type="button" class="carousel-control carousel-prev" aria-label="Previous slide">
            <span aria-hidden="true">←</span>
        </button>
        <button type="button" class="carousel-control carousel-next" aria-label="Next slide">
            <span aria-hidden="true">→</span>
        </button>
    }
    
    @if (Model.ShowIndicators == true && Model.Images.Count > 1)
    {
        <div class="carousel-indicators">
            @for (int i = 0; i < Model.Images.Count; i++)
            {
                <button type="button" 
                        class="carousel-indicator" 
                        data-index="@i"
                        @(i == 0 ? "data-active=true" : "")
                        aria-label="Go to slide @(i+1)"></button>
            }
        </div>
    }
</div>

<style>
    /* Add CSS to hide any duplicate image containers that appear after the carousel */
    #@(Model.Id) ~ p:has(a[href*="epr.elastic.co"]),
    #@(Model.Id) ~ div:has(a[href*="epr.elastic.co"]) {
        display: none !important;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        initImageCarousel();
        
        // Additional script to hide any duplicates
        const carousel = document.getElementById("@Model.Id");
        if (carousel) {
            const carouselLinks = Array.from(carousel.querySelectorAll('a.carousel-image-reference')).map(a => a.href);
            const allLinks = document.querySelectorAll('a[href*="epr.elastic.co"]');
            
            // Go through all links and hide their containers if they're duplicates of carousel images
            allLinks.forEach(link => {
                // Skip links inside carousel
                if (link.closest('.carousel-container') === carousel) return;
                
                if (carouselLinks.includes(link.href)) {
                    // Find container to hide
                    const container = link.closest('p') || link.closest('div:not(.carousel-container)');
                    if (container) {
                        container.style.display = 'none';
                    }
                }
            });
        }
    });
</script>