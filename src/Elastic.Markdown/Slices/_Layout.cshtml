@inherits RazorLayoutSlice<LayoutViewModel>
<!DOCTYPE html>
<html lang="en" class="h-screen">
<head>
	<title>@Model.Title</title>
	<link rel="stylesheet" type="text/css" href="@Model.Static("styles.css")"/>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="robots" content="@(Model.AllowIndexing ? "index, follow" : "noindex, nofollow")">
	<script src="https://unpkg.com/htmx.org@2.0.4/dist/htmx.js" integrity="sha384-oeUn82QNXPuVkGCkcrInrS1twIxKhkZiFfr2TdiuObZ3n3yIeMiqcRzkIcguaof1" crossorigin="anonymous"></script>
	<script src="https://unpkg.com/htmx-ext-preload@2.1.0" integrity="sha384-fkzubQiTB69M7XTToqW6tplvxAOJkqPl5JmLAbumV2EacmuJb8xEP9KnJafk/rg8" crossorigin="anonymous"></script>
	<script src="https://unpkg.com/htmx.org@1.9.12/dist/ext/morphdom-swap.js"></script>
	<meta name="htmx-config" content='{"scrollIntoViewOnBoost":false, "selfRequestsOnly": true}'>
</head>
<body class="text-ink">
@(await RenderPartialAsync(_Header.Create(Model)))
<div class="flex flex-col items-center px-6">
<div class="container flex">
	@await RenderPartialAsync(_PagesNav.Create(Model))
	<main class="w-full order-2">
		<div class="content-container">
		</div>
		<div id="content" class="w-full flex justify-between">
			@await RenderPartialAsync(_TableOfContents.Create(Model))
			<div class="content-container order-first px-6 pt-6 pb-12">
				@await RenderPartialAsync(_Breadcrumbs.Create(Model))
				<article class="markdown-content">
					@await RenderBodyAsync()
				</article>
				<footer class="mt-20">
					<div class="flex flex-wrap lg:flex-nowrap gap-2 mt-2">
						<div class="basis-full">
							@if (Model.Previous != null)
							{
								<a href="@Model.Previous.Url" hx-get="@Model.Previous.Url" class="flex h-full items-center text-ink-light hover:black border-1 border-gray-300 hover:border-gray-500 rounded-lg p-6 shadow-md">
									<svg class="size-6 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5"/>
									</svg>
									<div>
										<div class="text-xs lg:text-sm">Previous</div>
										<div class="text-base lg:text-xl text-black">@Model.Previous.NavigationTitle</div>
									</div>
								</a>
							}
						</div>
						<div class="basis-full">
							@if (Model.Next != null)
							{
								<a href="@Model.Next.Url" hx-get="@Model.Next.Url" hx-select="#content" hx-target="#content" class="flex h-full items-center justify-end text-ink-light hover:black border-1 border-gray-300 hover:border-gray-500 rounded-lg p-6 shadow-md text-right">
									<div>
										<div class="text-xs lg:text-sm">Next</div>
										<div class="text-base lg:text-xl text-black">@Model.Next.NavigationTitle</div>
									</div>
									<svg class="size-6 ml-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"/>
									</svg>
								</a>
							}
						</div>
					</div>
				</footer>
			</div>
		</div>
	</main>
</div>
</div>
@(await RenderPartialAsync(_Footer.Create(Model)))
<script src="@Model.Static("main.js")"></script>
</body>
</html>
