@inherits RazorSlice<Elastic.Markdown.MarkdownLayoutViewModel>
@{
	var targets =
		Model.Features.PrimaryNavEnabled
			? Model.Parents.Reverse()
			: Model.Parents.Reverse().Skip(1);

	//TODO should we even distinctby
	var parents = targets.DistinctBy(p => p.Url).ToList();
	var firstCrumb = parents.FirstOrDefault();
	var crumbs = parents.Skip(1).TakeLast(2).ToList();
}

<ol id="breadcrumbs" class="block items-center w-full py-6" itemscope="" itemtype="https://schema.org/BreadcrumbList">
	@if (firstCrumb != null)
	{
		<li class="inline text-ink-light text-sm leading-[1.2em]" itemprop="itemListElement" itemscope="" itemtype="https://schema.org/ListItem">
			<a
				hx-disable="true"
				itemprop="item"
				href="@firstCrumb.Url"
				@Htmx.GetHxAttributes( Model.CurrentNavigationItem?.NavigationRoot.Id == firstCrumb.NavigationRoot.Id)
			>
				<span itemprop="name" class="hover:text-black">@firstCrumb.NavigationTitle</span>
			</a>
			<meta itemprop="position" content="1">
		</li>
	}
	@if (crumbs.Count > 0 && parents.Count > 3)
	{
		<li class="inline text-ink-light text-sm leading-[1.2em]" itemprop="itemListElement" itemscope="" itemtype="https://schema.org/ListItem">
			<span class="px-1">/</span>
			â€¦
		</li>
	}
	
	@for (var i = 0; i < crumbs.Count; i++)
	{
	    var item = crumbs[i];
		<li class="inline text-ink-light text-sm leading-[1.2em]" itemprop="itemListElement" itemscope="" itemtype="https://schema.org/ListItem">
			<span class="px-1">/</span>
			<a
				itemprop="item" 
				href="@item.Url"
				@Htmx.GetHxAttributes(Model.CurrentNavigationItem?.NavigationRoot.Id == item.NavigationRoot.Id)
			>
				<span itemprop="name" class="hover:text-black">@item.NavigationTitle</span>
			</a>
			<meta itemprop="position" content="@(i+2)">
		</li>
	}
	<li class="inline text-ink-light text-sm leading-[1.2em]" itemprop="itemListElement" itemscope="" itemtype="https://schema.org/ListItem">
		<span class="px-1">/</span>
	</li>
</ol>
