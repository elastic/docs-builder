@using Elastic.Documentation.Site.Navigation
@inherits RazorSlice<NavigationTreeItem>
@{
	var isTopLevel = Model.Level == 0;
}
@foreach (var item in Model.SubTree.NavigationItems)
{
	if (item is INodeNavigationItem<INavigationModel, INavigationItem> { NavigationItems.Count: 0, Index: not null } group)
	{
		<li class="flex group/li pr-8 @(isTopLevel ? "font-semibold mt-6" : "mt-4")">
			<a
				href="@group.Url"
				@Htmx.GetNavHxAttributes(Model.IsPrimaryNavEnabled && group.NavigationRoot.Id == Model.RootNavigationId || true)
				class="sidebar-link group-[.current]/li:text-blue-elastic!"
			>
				@group.NavigationTitle
			</a>
		</li>
	}
	else if (item is INodeNavigationItem<INavigationModel, INavigationItem> folder)
	{
		var g = folder;
		<li class="flex flex-wrap group-navigation @(isTopLevel ? "mt-6" : "mt-4")">
			<div class="peer grid grid-cols-[1fr_auto] w-full">
				<a
					href="@(g.Url)"
					@Htmx.GetNavHxAttributes(Model.IsPrimaryNavEnabled && g.NavigationRoot.Id == Model.RootNavigationId || true)
					class="sidebar-link pr-2 content-center @(isTopLevel ? "font-semibold" : "")">
					@(g.NavigationTitle)
				</a>
				<label for="@folder.Id" class="group/label flex mr-2 items-start">
					<div class="hover:bg-grey-20 rounded-sm p-1 cursor-pointer">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							stroke-width="1.5"
							stroke="currentColor"
							class="shrink-0 -rotate-90 group-has-checked/label:rotate-0 w-3.5">
							<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"/>
						</svg>
					</div>
					<input
						id="@folder.Id"
						type="checkbox"
						class="hidden"
						aria-hidden="true">
				</label>
			</div>
			@if (g.NavigationItems.Count > 0)
			{
				<ul class="w-full hidden peer-has-checked:block ml-4">
					@await RenderPartialAsync(_TocTreeNav.Create(new NavigationTreeItem
					{
						IsPrimaryNavEnabled = Model.IsPrimaryNavEnabled,
						IsGlobalAssemblyBuild = Model.IsGlobalAssemblyBuild,
						Level = Model.Level + 1,
						SubTree = g,
						RootNavigationId = Model.RootNavigationId
					}))
				</ul>
			}
		</li>
	}
	else if (item is ILeafNavigationItem<INavigationModel> leaf && Model.SubTree.Url != leaf.Url)
	{
		<li class="flex group/li pr-8 @(isTopLevel ? "font-semibold mt-6" : "mt-4")">
			<a
				href="@leaf.Url"
				@Htmx.GetNavHxAttributes(Model.IsPrimaryNavEnabled && leaf.NavigationRoot.Id == Model.RootNavigationId || true)
				class="sidebar-link grow group-[.current]/li:text-blue-elastic!"
			>
				@leaf.NavigationTitle
			</a>
		</li>
	}
}
